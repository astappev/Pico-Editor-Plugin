<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
    <meta charset="utf-8"/>
    <title>Pico Editor - {{ site_title }}</title>
    <link rel="stylesheet" href="{{ base_url }}/plugins/PicoEditor/assets/PicoEditor.css" type="text/css"/>
    <meta name="robots" content="noindex, nofollow"/>
</head>
<body>
    <div id="saving">Saving...</div>

    <div id="sidebar">
        <div class="controls">
            <a href="#" class="new btn" title="New">1</a>
            <a href="{{ editor_url | link }}/logout" class="logout btn" title="Logout">2</a>
            <a href="{{ base_url }}" target="_blank" class="view btn" title="View Site">5</a>
        </div>
        <ul class="nav">
            {% for page in pages %}
                <li>
                    <a href="#" data-id="{{ page.id }}" class="post">
                        <span data-icon="3" aria-hidden="true"></span>
                        {% if page.title %}{{ page.title }}{% else %}Untitled{% endif %}
                    </a>
                    <a href="{{ page.url }}" target="_blank" class="view" title="View">5</a>
                    <a href="#" data-id="{{ page.id }}" class="delete" title="Delete">4</a>
                </li>
            {% endfor %}
        </ul>
    </div>

    <div id="main">
        <div id="epiceditor"></div>

        <script src="{{ base_url }}/plugins/PicoEditor/assets/js/jquery-3.4.1.min.js"></script>
        <script src="{{ base_url }}/plugins/PicoEditor/assets/epiceditor/js/epiceditor.min.js"></script>
        <script>
            $(document).ready(function () {
                var editorUrl = '{{ editor_url | link }}';
                var unsaved = false;
                var ignoreKeyUp = false;
                var editor = new EpicEditor({
                    container: 'epiceditor',
                    basePath: '{{ base_url }}/plugins/PicoEditor/assets/epiceditor',
                    file: {
                        name: 'epiceditor',
                        defaultContent: '',
                        autoSave: 5000
                    },
                    theme: {
                        base: '/css/epiceditor.css',
                        editor: '/css/editor.css',
                        preview: '/css/preview.css'
                    },
                    button: {
                        fullscreen: false
                    },
                    focusOnLoad: true
                }).load();

                function onUnsavedChanges() {
                    unsaved = true;
                    document.title += ' *';
                    window.onbeforeunload = function () {
                        return 'You have unsaved changes. Are you sure you want to leave this post?'
                    }
                }

                function onAllChangesSaved() {
                    unsaved = false;
                    document.title = document.title.replace(' *', '');
                    window.onbeforeunload = null;
                }

                $(editor.getElement('editor')).on('keyup', function (e) {
                    if (e.keyCode === 17) {
                        ignoreKeyUp = false;
                    } else if (!ignoreKeyUp && !unsaved) {
                        onUnsavedChanges();
                    }
                });

                // for ignore keys with ctrl + [key]
                $(editor.getElement('editor')).on('keydown', function (e) {
                    if (e.keyCode === 17) {
                        ignoreKeyUp = true;
                    }
                });

                // New
                $('.controls .new').on('click', function (e) {
                    e.preventDefault();
                    var title = prompt('Please enter a post title', '');
                    if (title != null && title !== '') {
                        $.post(editorUrl + '/new', {title: title}, function (data) {
                            if (data.error) {
                                alert(data.error);
                            } else {
                                $('.nav .post').removeClass('open');
                                $('#epiceditor').data('currentFile', data.id);
                                editor.importFile('epiceditor', data.content);
                                onAllChangesSaved();
                                $('.nav').prepend('<li><a href="#" data-id="' + data.id + '" class="post open"><span data-icon="3" aria-hidden="true"></span>' + data.title + '</a><a href="' + data.url + '" target="_blank" class="view" title="View">5</a><a href="#" data-id="' + data.id + '" class="delete" title="Delete">4</a></li>');
                            }
                        }, 'json');
                    }
                });

                // Open post
                $('.nav').on('click', '.post', function (e) {
                    e.preventDefault();
                    if (unsaved && !confirm('You have unsaved changes. Are you sure you want to leave this post?')) return false;
                    $('.nav .post').removeClass('open');
                    $(this).addClass('open');

                    var pageId = $(this).data('id');
                    $.post(editorUrl + '/open', {pageId: pageId}, function (data) {
                        $('#epiceditor').data('currentFile', pageId);
                        editor.importFile('epiceditor', data);
                        onAllChangesSaved();
                    });
                });

                // Save post
                editor.on('save', function () {
                    var pageId = $('#epiceditor').data('currentFile');
                    if (pageId) {
                        $('#saving').text('Saving...').addClass('active');
                        $.post(editorUrl + '/save', {
                            pageId: pageId,
                            content: editor.exportFile()
                        }, function (data) {
                            $('#saving').text('Saved');
                            onAllChangesSaved();
                            setTimeout(function () {
                                $('#saving').removeClass('active');
                            }, 1000);
                        });
                    }
                });

                editor.on('autosave', function () {
                    editor.emit('save');
                });

                // Save on preview
                editor.on('preview', function () {
                    editor.emit('save');
                });

                // Delete post
                $('.nav').on('click', '.delete', function (e) {
                    e.preventDefault();
                    if (!confirm('Are you sure you want to delete this file?')) return false;
                    $('.nav .post').removeClass('open');

                    var li = $(this).parents('li');
                    var pageId = $(this).data('id');
                    $.post(editorUrl + '/delete', {pageId: pageId}, function (data) {
                        li.remove();
                        $('#epiceditor').removeData('currentFile');
                        editor.importFile('epiceditor', '');
                        onAllChangesSaved();
                    });
                });

                // Window resize
                $('body,#main,#epiceditor').height($(window).height());
                $(window).resize(function () {
                    $('body,#main,#epiceditor').height($(window).height());
                    editor.reflow();
                });
            });
        </script>
    </div>
</body>
</html>
